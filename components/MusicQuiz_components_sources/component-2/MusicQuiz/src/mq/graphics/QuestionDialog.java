/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * QuestionDialog.java
 *
 * Created on 18-ago-2010, 14.43.07
 */

package mq.graphics;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import mq.Game;
import mq.scores.ScoresManager;
import mq.songplayer.SongPlayer;

/**
 *
 * @author Daniele
 */
public class QuestionDialog extends javax.swing.JDialog {

    /** Creates new form QuestionDialog */
    public QuestionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/mq/graphics/icon.png")).getImage());
        setLocationRelativeTo(null);
        this.parent = parent;

        choiceLabels = new ArrayList<JLabel>();
        choiceLabels.add(choice1Label);
        choiceLabels.add(choice2Label);
        choiceLabels.add(choice3Label);
        choiceLabels.add(choice4Label);
        game = new Game(new GameListener());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionLabel = new javax.swing.JLabel();
        choice2Label = new javax.swing.JLabel();
        choice4Label = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        lifesLabel = new javax.swing.JLabel();
        choice3Label = new javax.swing.JLabel();
        choice1Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Music Quiz");
        setResizable(false);

        questionLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        questionLabel.setForeground(new java.awt.Color(0, 102, 255));
        questionLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mq/graphics/icon.png"))); // NOI18N
        questionLabel.setText("<html>loading</html>");

        choice2Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        choice2Label.setText("<loading>");
        choice2Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerGiven(evt);
            }
        });

        choice4Label.setFont(new java.awt.Font("Tahoma", 0, 12));
        choice4Label.setText("<loading>");
        choice4Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerGiven(evt);
            }
        });

        scoreLabel.setText("Punti: 0");

        lifesLabel.setText("<html>Vite: <font color=\"#FF0000\">♥♥♥</font></html>");

        choice3Label.setFont(new java.awt.Font("Tahoma", 0, 12));
        choice3Label.setText("<loading>");
        choice3Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerGiven(evt);
            }
        });

        choice1Label.setFont(new java.awt.Font("Tahoma", 0, 12));
        choice1Label.setText("<loading>");
        choice1Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerGiven(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(questionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choice3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(choice1Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(choice4Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(choice2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lifesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 263, Short.MAX_VALUE)
                        .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choice1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice4Label, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(choice3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scoreLabel)
                    .addComponent(lifesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void answerGiven(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_answerGiven
        if (waitingUserInput) {
            waitingUserInput = false;
            guess = ((JLabel)evt.getSource()).getText().substring(6, ((JLabel)evt.getSource()).getText().lastIndexOf('<') );            
            game.answer(guess);
        }
    }//GEN-LAST:event_answerGiven

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuestionDialog dialog = new QuestionDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Override
    public void dispose() {
        super.dispose();
        SongPlayer.stop();
        parent.setVisible(true);
    }

     public class GameListener {

        public void correctAnswer(int score) {
            for (JLabel label : choiceLabels) {
                if (label.getText().substring(6, label.getText().lastIndexOf('<')).equals(guess)) {
                    label.setForeground(Color.green);
                    break;
                }
            }

            scoreLabel.setText("Punti: " + score);
        }

        public void wrongAnswer(String right, int lifes) {
            for (JLabel label : choiceLabels) {
                if (label.getText().substring(6, label.getText().lastIndexOf('<')).equals(guess)) {
                    label.setForeground(Color.red);

                } else {
                    if (label.getText().substring(6, label.getText().lastIndexOf('<')).equals(right)) {
                        label.setForeground(Color.green);
                    }
                }
            }
            String lifesLabelText = "<html>Vite: <font color=\"#FF0000\">";
            for (int i = 0; i < lifes; i++) {
                lifesLabelText += "♥";
            }
            lifesLabelText += "</font></html>";
            lifesLabel.setText(lifesLabelText);
        }

        public void gameOver(int score) {
            lifesLabel.setText("<html><font color=\"#FF0000\">GAME OVER</font></html>");
            JOptionPane.showMessageDialog(parent,"Game Over.", "Music Quiz", JOptionPane.INFORMATION_MESSAGE);
            String name = "";
            while (name.isEmpty())
                name = JOptionPane.showInputDialog(parent, "Inserisci tuo Nome:", "Music Quiz - Salva punteggio", JOptionPane.QUESTION_MESSAGE);

            ScoresManager sm = new ScoresManager();
            sm.addScore(name, score);
            dispose();
        }

        public void askQuestion(String questionText, ArrayList<String> choices, String songPath) {
            SongPlayer.stop();
            for (int i = 0; i < choiceLabels.size(); i++) {
                choiceLabels.get(i).setForeground(Color.black);
                choiceLabels.get(i).setText("<html>" + choices.get(i) + "</html>");
            }
            questionLabel.setText("<html>" + questionText + "</html>");
            if (songPath != null)
                SongPlayer.play(songPath);
            waitingUserInput = true;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel choice1Label;
    private javax.swing.JLabel choice2Label;
    private javax.swing.JLabel choice3Label;
    private javax.swing.JLabel choice4Label;
    private javax.swing.JLabel lifesLabel;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JLabel scoreLabel;
    // End of variables declaration//GEN-END:variables

    private Game                game;
    private String              guess;
    private ArrayList<JLabel>   choiceLabels;
    private java.awt.Frame      parent;
    private boolean             waitingUserInput;
}
